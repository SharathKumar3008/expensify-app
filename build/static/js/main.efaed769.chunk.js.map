{"version":3,"sources":["components/Header.js","components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","actions/filters.js","components/DateRangePicker.js","components/ExpenseListFilters.js","components/ExpanseDashboardPage.js","components/SingleDatePicker.js","components/ExpenseForm.js","components/AddExpansePage.js","actions/expenses.js","components/EditExpansePage.js","components/HelpPage.js","components/NotFoundPage.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["Header","to","activeClassName","exact","ExpenseList","props","id","description","amount","createdAt","moment","format","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","selectExpenses","filters","map","ExpenseListItem","setStartDate","type","setEndDate","DatePicker","onDateChange","setState","focusedInput","this","startDateId","endDateId","onDatesChange","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","React","Component","ExpenseListFilters","dispatch","value","onChange","e","setTextFilter","target","ExpanseDashboardPage","ReactdatesDatepicker","useState","date","setDate","isFocused","setIsFocused","focused","day","ExpenseForm","onDescriptionChange","onNotesChange","note","onAmountChange","match","onSubmit","preventDefault","error","parseFloat","valueOf","toString","calenderFocused","placeholder","autoFocus","uuidv4","addExpense","history","push","find","params","console","log","updates","onClick","removeExpense","HelpPage","NotFoundPage","AppRouter","path","component","AddExpansePage","EditExpansePage","expenseReducerDefaultState","action","filterReducerDefaultState","startOf","endOf","store","createStore","combineReducers","expenseReducer","filterReducer","window","__REDUX_DEVTOOLS_EXTENSION__","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efaed769.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n    <div>\n        <h1>Expensify App</h1>\n        <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Home</NavLink>\n        <NavLink to=\"/create\" activeClassName=\"is-active\">Create Expense</NavLink>\n        <NavLink to=\"/help\" activeClassName=\"is-active\">Help</NavLink>\n    </div>\n);\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ExpenseList = ({ id, description, amount, createdAt}, props) => (\n    <div>\n        <Link to={`/edit/${id}`}>\n            <h3>{description}</h3>\n        </Link>\n        <p>{amount} - {moment(createdAt).format('ddd Do, YYYY')}</p>\n    </div>\n);\n\nexport default ExpenseList;","import moment from 'moment';\n\nexport default (expenses, {text, sortBy, startDate, endDate}) => {\n    return expenses.filter((expense) => {\n        const createdAtMoment = moment(expense.createdAt);\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true;\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true;\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n        return startDateMatch && endDateMatch && textMatch;\n    }).sort((a, b) =>{\n        if(sortBy === 'date'){\n            return a.createdAt < b.createdAt ? 1 : -1;\n        } else if(sortBy === 'amount'){\n            return a.amount < b.amount ? 1 : -1;\n        }\n    });\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nconst ExpenseList = (props) => (\n    <div>\n        <h1>Expense List</h1>\n        {\n            props.expenses.map((expense)=> {\n                return <ExpenseListItem key={expense.id} {...expense} />\n            })\n        }\n    </div>\n);\n\nconst mapStateToProps = (state)=>{\n    return {\n        expenses : selectExpenses(state.expenses, state.filters)\n    }\n};\n\nexport default connect(mapStateToProps)(ExpenseList);","//SET_TEXT_FILTER\nexport const setTextFilter = (text = '') => ({\n    type : 'SET_TEXT_FILTER',\n    text\n});\n\n//SORT_BY_AMOUNT\nexport const sortByAmount = () => ({\n    type : 'SORT_BY_AMOUNT'\n});\n\n//SORT_BY_DATE\nexport const sortByDate = () => ({\n    type : 'SORT_BY_DATE'\n});\n\n//SET_START_DATE\nexport const setStartDate = ( startDate ) => ({\n    type : 'SET_START_DATE',\n    startDate\n});\n\n//SET_END_DATE\nexport const setEndDate = ( endDate ) => ({\n    type : 'SET_END_DATE',\n    endDate\n});","import React from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\n\nexport default class DatePicker extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            startDate : this.props.startDate,\n            endDate : this.props.endDate,\n            focusedInput : null\n        }\n    }\n    onDateChange = ({ startDate, endDate }) => {\n        //if(startDate && endDate) {\n            this.props.onDateChange(startDate, endDate);\n            return this.setState({ startDate, endDate });\n        //}\n    }\n    render() {\n        return (\n            <div>\n            <DateRangePicker\n              startDate={this.state.startDate}\n              startDateId=\"start_date_id\"\n              endDate={this.state.endDate}\n              endDateId=\"end_date_id\"\n              focusedInput={this.state.focusedInput}\n              onDatesChange={this.onDateChange}\n              onFocusChange={focusedInput => this.setState({ focusedInput })}\n              numberOfMonths={1}\n              isOutsideRange={()=> false}\n              showClearDates={true}\n            />\n            </div>\n          );\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from '../actions/filters';\nimport DateRangePicker from './DateRangePicker';\n\nclass ExpenseListFilters extends React.Component {\n\n    onDateChange = (startDate, endDate) => {\n        this.props.dispatch(setStartDate(startDate));\n        this.props.dispatch(setEndDate(endDate));\n    }\n    render() {\n        return (\n            <div>\n                <input\n                    type=\"text\"\n                    value={this.props.filters.text}\n                    onChange = {(e) => {\n                        this.props.dispatch(setTextFilter(e.target.value));\n                    }}\n                />\n                <select\n                    value={this.props.filters.sortBy}\n                    onChange={(e)=> {\n                        if(e.target.value === 'amount'){\n                            this.props.dispatch(sortByAmount());\n                        }else if(e.target.value === 'date'){\n                            this.props.dispatch(sortByDate());\n                        }\n                    }}\n                >\n                    <option value=\"date\">Date</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n                <DateRangePicker \n                    startDate={this.props.filters.startDate}\n                    endDate={this.props.filters.endDate}\n                    onDateChange={this.onDateChange}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    filters : state.filters\n})\n\nexport default connect(mapStateToProps)(ExpenseListFilters);","import React from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseListFilters from './ExpenseListFilters';\n\nconst ExpanseDashboardPage = () => (\n    <div>\n        <ExpenseListFilters />\n        <ExpenseList />\n    </div>\n);\n\nexport default ExpanseDashboardPage;","import React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { SingleDatePicker } from \"react-dates\";\n\nexport default function ReactdatesDatepicker(props) {\n    const [date, setDate] = useState(props.createdAt);\n    const [isFocused, setIsFocused] = useState(false);\n  \n    function onDateChange(date) {\n      if(date){\n        props.onDateChange(date)\n        setDate(date);\n      }\n    }\n  \n    function onFocusChange({ focused }) {\n      setIsFocused(focused);\n    }\n  \n    return (\n      <SingleDatePicker\n        id=\"date_input\"\n        date={date}\n        focused={isFocused}\n        onDateChange={onDateChange}\n        onFocusChange={onFocusChange}\n        numberOfMonths={1}\n        isOutsideRange={(day)=> false}\n      />\n    );\n  }\n  ","import React from 'react';\nimport moment from 'moment';\nimport SingleDatePicker from './SingleDatePicker';\n\nexport default class ExpenseForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            description : props.expense ? props.expense.description : '',\n            note : props.expense ? props.expense.note : '',\n            amount : props.expense ? (props.expense.amount/100).toString() : '',\n            createdAt : props.expense ? moment(props.expense.createdAt) : moment(),\n            calenderFocused : false,\n            error : ''\n    \n        };\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value;\n        this.setState(()=>({ description }));\n    };\n\n    onNotesChange = (e) => {\n        const note = e.target.value;\n        this.setState(()=>({ note }));\n    };\n\n    onAmountChange = (e) => {\n        const amount = e.target.value;\n        if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)){\n            this.setState(()=>({ amount }));\n        }\n    }\n\n    onDateChange = (createdAt) => {\n        this.setState(()=>({ createdAt }));\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(!this.state.description || !this.state.amount){\n            this.setState(()=>({error: 'Please provide Description and Amount.'}));\n        }else{\n            this.setState(()=>({error: ''}));\n            this.props.onSubmit({\n                description : this.state.description,\n                amount : parseFloat(this.state.amount, 10) * 100,\n                createdAt : this.state.createdAt.valueOf(),\n                note : this.state.note\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.error !== '' && <p>{this.state.error}</p>}\n                <form onSubmit={this.onSubmit}>\n                    <input\n                        type=\"text\"\n                        value={this.state.description}\n                        onChange={this.onDescriptionChange}\n                        placeholder=\"description\"\n                        autoFocus\n                    />\n                    <input\n                        type=\"text\"\n                        value={this.state.amount}\n                        onChange={this.onAmountChange}\n                        placeholder=\"amount\"\n                    />\n                    <SingleDatePicker\n                        onDateChange = {this.onDateChange}\n                        createdAt={this.state.createdAt || moment()}\n                    />\n                    <textarea\n                        placeholder=\"Add a Note for your Expense(Optional)\"\n                        value={this.state.note}\n                        onChange={this.onNotesChange}\n                    >\n                    </textarea>\n                    <button>Add Expense</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport { connect } from 'react-redux';\nimport {addExpense } from '../actions/expenses';\n\nconst AddExpansePage = (props) => (\n    <div>\n        <h1>Add Expense</h1>\n        <ExpenseForm \n            onSubmit={(expense)=>{\n                props.dispatch(addExpense(expense));\n                props.history.push('/');\n            }}\n        />\n    </div>\n);\n\nexport default connect()(AddExpansePage);","import { v4 as uuidv4 } from 'uuid';\n\n//ADD_EXPENSE\nexport const addExpense = (\n    {\n        description = '',\n        note = '',\n        amount = 0,\n        createdAt = 0\n    } = {}\n) => ({\ntype : 'ADD_EXPENSE',\nexpense : {\n    id :uuidv4(),\n    description,\n    note,\n    amount,\n    createdAt\n}\n});\n\n//REMOVE_EXPENSE\nexport const removeExpense = ({id} = {}) => ({\ntype : 'REMOVE_EXPENSE',\nid\n});\n\n//EDIT_EXPENSE\nexport const editExpense = (id, updates) => ({\ntype : 'EDIT_EXPENSE',\nid, \nupdates\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { editExpense, removeExpense } from '../actions/expenses';\n\nconst EditExpansePage = (props) => {\n    console.log('props', props);\n    return (\n        <div>\n            <ExpenseForm \n                expense = {props.expense}\n                onSubmit={(expense)=>{\n                    console.log(expense);\n                    props.dispatch(editExpense(props.expense.id, expense));\n                    props.history.push('/');\n                }}    \n            />\n\n            <button onClick={()=> {\n                props.dispatch(removeExpense({id: props.expense.id}));\n                props.history.push('/');\n            }}>Remove</button>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        expense : state.expenses.find((expense)=> expense.id === props.match.params.id)\n    };\n}\n\nexport default connect(mapStateToProps)(EditExpansePage);","import React from 'react';\n\nconst HelpPage = () => (\n    <div>\n        <p>You can contact me at sharathk@kensium.com for any help</p>\n    </div>\n);\n\nexport default HelpPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n    <div>\n        404 Page - <Link to=\"/\">Go Home</Link>\n    </div>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport ExpanseDashboardPage from '../components/ExpanseDashboardPage';\nimport AddExpansePage from '../components/AddExpansePage';\nimport EditExpansePage from '../components/EditExpansePage';\nimport HelpPage from '../components/HelpPage';\nimport NotFoundPage from '../components/NotFoundPage';\n\nconst AppRouter = () => (\n    <BrowserRouter>\n        <div>\n            <Header />\n            <Switch>\n            <Route path=\"/\" component={ExpanseDashboardPage} exact={true} />\n            <Route path=\"/create\" component={AddExpansePage} />\n            <Route path=\"/edit/:id\" component={EditExpansePage} />\n            <Route path=\"/help\" component={HelpPage} />\n            <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n    </BrowserRouter>\n);\n\nexport default AppRouter;","\n//Expense Reducer\nconst expenseReducerDefaultState = [];\n\nexport default (state = expenseReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE' :\n            return [...state, action.expense];\n        case 'REMOVE_EXPENSE' :\n            return state.filter(({id}) => id !== action.id);\n        case 'EDIT_EXPENSE' :\n            return state.map((expense)=>{\n                if(expense.id === action.id){\n                    return {\n                        ...expense,\n                        ...action.updates\n                    }\n                }else{\n                    return expense;\n                }\n            })\n        default :\n            return state;\n    }\n}","import moment from 'moment';\n\n//Filter Reducer\nconst filterReducerDefaultState = {\n    text : '',\n    sortBy : 'date',\n    startDate : moment().startOf('month'),\n    endDate : moment().endOf('month')\n};\n\nexport default (state = filterReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'SET_TEXT_FILTER' :\n            return {\n                ...state,\n                text : action.text\n            }\n        case 'SORT_BY_AMOUNT' :\n            return {\n                ...state,\n                sortBy : 'amount'\n            }\n        case 'SORT_BY_DATE' :\n            return {\n                ...state,\n                sortBy : 'date'\n            }\n        case 'SET_START_DATE' :\n            return {\n                ...state,\n                startDate : action.startDate\n            }\n        case 'SET_END_DATE' :\n            return {\n                ...state,\n                endDate : action.endDate\n            }\n        default :\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './store/configureStore';\n\nimport '@csstools/normalize.css/normalize.css';\nimport './styles/styles.scss';\n//import IndecisionApp from \"./App\";\n\nconst store = configureStore();\n\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById('root'));","import { createStore, combineReducers } from 'redux';\nimport expenseReducer from '../reducers/expenses';\nimport filterReducer from '../reducers/filters';\n\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            expenses : expenseReducer,\n            filters : filterReducer\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\n    return store;\n}"],"sourceRoot":""}